/*
 * File: app/view/yljz/TRQueryViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ccmz.view.yljz.TRQueryViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.yljz.trquery',

    onCboHospitalAfterRender: function(component, eOpts) {
        var vm=this.getViewModel();
        component.getStore().load({
            scope:this,
            callback: function(records, operation, success) {
                if (records.length>0){
                    component.setValue(records[0]);
                }

                component.setEditable(false);
            }
        });
    },

    onQueryClick: function(button, e, eOpts) {
        var view=this.getView();
        var vm=this.getViewModel();
        var s=vm.getStore('GridData');
        s.clearFilter(true);
        s.filter([
        {property: 'Finish_Flag',value:view.QueryType},
        {property: 'Sfzh',value:vm.get('sfzh'),disableOnEmpty:true},
        {property: 'Reim_Source',value:vm.get('reim_source'),disableOnEmpty:true},
        {property: 'Reim_Type_ID',value:vm.get('reim_type'),disableOnEmpty:true},
        {property: 'JGBM',value:vm.get('dept_id'),disableOnEmpty:true},
        {property: 'Apply_Hospital_ID',value:vm.get('apply_hospital'),disableOnEmpty:true},
        {property: 'Name',value:vm.get('name'),disableOnEmpty:true},
        {property: 'CP_YLZ',value:vm.get('ylz_value'),operator:vm.get('ylz_symbol'),disableOnEmpty:true},
        {property: 'CP_GR',value:vm.get('gr_value'),operator:vm.get('gr_symbol'),disableOnEmpty:true},
        {property: 'CP_YLJZ',value:vm.get('yljz_value'),operator:vm.get('yljz_symbol'),disableOnEmpty:true},
        {property: 'CP_YLJZ_LJ',value:vm.get('sum_yljz_value'),operator:vm.get('sum_yljz_symbol'),disableOnEmpty:true},
        {property: 'RegType',value:vm.get('reg_type'),disableOnEmpty:true},
        {property: 'IC_Type',value:vm.get('ic_type'),disableOnEmpty:true},
        {property: 'IC',value:vm.get('ic'),disableOnEmpty:true},
        {property: 'SFLB',value:vm.get('idt_type'),disableOnEmpty:true},
        {property: 'StdDisease_Name',value:vm.get('disease_name'),disableOnEmpty:true},
        {property: 'Create_Time1',value:vm.get('apply_date1'),disableOnEmpty:true},
        {property: 'Create_Time2',value:vm.get('apply_date1'),disableOnEmpty:true},
        {property: 'Finish_Date1',value:vm.get('finish_date1'),disableOnEmpty:true},
        {property: 'Finish_Date2',value:vm.get('finish_date2'),disableOnEmpty:true},
        {property: 'Cancel_Date1',value:vm.get('cancel_date1'),disableOnEmpty:true},
        {property: 'Cancel_Date2',value:vm.get('cancel_date2'),disableOnEmpty:true},
        ],null,true);
        s.sort('Finish_Date', 'DESC');
    },

    onReportClick: function(button, e, eOpts) {
        var vm=this.getViewModel();
        vm.set('apply_date1',new Date());
    },

    onConditionPanelRender: function(component, eOpts) {
        var view=this.getView();
        var vm=this.getViewModel();
        var dtpFinishDate=this.lookupReference('dtpFinishDate');
        var dtpCancelDate=this.lookupReference('dtpCancelDate');
        var year=(new Date()).getFullYear();
        var beginDate=new Date(year,0,1);
        var endDate=new Date(year,11,31);
        switch(view.QueryType){
            case 0:
            dtpFinishDate.setHidden(true);
            dtpCancelDate.setHidden(true);
            break;
            case 1:
            dtpCancelDate.setHidden(true);
            vm.set('finish_date1',beginDate);
            vm.set('finish_date2',endDate);
            break;
            case 2:
            dtpFinishDate.setHidden(true);
            vm.set('cancel_date1',beginDate);
            vm.set('cancel_date2',endDate);
            break;
            default:
            break;
        }
    },

    onGridpanelCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        if (!this.getView().showDetailLink)
        return;
        if (cellIndex===0){
            var v=new ccmz.view.yljz.TRItem({
                viewModel:{
                    data:{
                        d:record
                    }
                }
            });
            var tabPanel=ccmz.getApplication().mainTabPanel;
            var tab=tabPanel.getComponent(record.get("Reim_NO"));
            if (!tab){
                tab=tabPanel.add({
                    autoScroll: true,
                    xtype: "panel",
                    layout: 'fit',
                    itemId:record.get("Reim_NO"),
                    title: record.get("Reim_NO"),
                    closable: true,
                    items: v,
                });
            }
            tabPanel.setActiveTab(tab);

        }
    },

    onContainerAfterRender: function(component, eOpts) {

    }

});
